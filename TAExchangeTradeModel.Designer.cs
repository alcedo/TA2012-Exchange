//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("TAExchangeTradeModel", "FK_portfolio_account", "account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TAExchangeDesktop.account), "portfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TAExchangeDesktop.portfolio), true)]
[assembly: EdmRelationshipAttribute("TAExchangeTradeModel", "FK_trade_account", "account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TAExchangeDesktop.account), "trade", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TAExchangeDesktop.trade), true)]
[assembly: EdmRelationshipAttribute("TAExchangeTradeModel", "FK_trade_expiryType", "expiryType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TAExchangeDesktop.expiryType), "trade", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TAExchangeDesktop.trade), true)]
[assembly: EdmRelationshipAttribute("TAExchangeTradeModel", "FK_stock_forex", "forex", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TAExchangeDesktop.forex), "stock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TAExchangeDesktop.stock), true)]
[assembly: EdmRelationshipAttribute("TAExchangeTradeModel", "FK_market_stock", "stock", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TAExchangeDesktop.stock), "market", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TAExchangeDesktop.market), true)]
[assembly: EdmRelationshipAttribute("TAExchangeTradeModel", "FK_trade_orderType", "orderType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TAExchangeDesktop.orderType), "trade", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TAExchangeDesktop.trade), true)]
[assembly: EdmRelationshipAttribute("TAExchangeTradeModel", "FK_portfolio_stock", "stock", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TAExchangeDesktop.stock), "portfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TAExchangeDesktop.portfolio), true)]
[assembly: EdmRelationshipAttribute("TAExchangeTradeModel", "FK_trade_stock", "stock", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TAExchangeDesktop.stock), "trade", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TAExchangeDesktop.trade), true)]
[assembly: EdmRelationshipAttribute("TAExchangeTradeModel", "FK_trade_tradeStatus", "tradeStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TAExchangeDesktop.tradeStatu), "trade", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TAExchangeDesktop.trade), true)]
[assembly: EdmRelationshipAttribute("TAExchangeTradeModel", "FK_trade_tradeType", "tradeType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TAExchangeDesktop.tradeType), "trade", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TAExchangeDesktop.trade), true)]

#endregion

namespace TAExchangeDesktop
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TAExchangeTradeEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TAExchangeTradeEntities object using the connection string found in the 'TAExchangeTradeEntities' section of the application configuration file.
        /// </summary>
        public TAExchangeTradeEntities() : base("name=TAExchangeTradeEntities", "TAExchangeTradeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TAExchangeTradeEntities object.
        /// </summary>
        public TAExchangeTradeEntities(string connectionString) : base(connectionString, "TAExchangeTradeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TAExchangeTradeEntities object.
        /// </summary>
        public TAExchangeTradeEntities(EntityConnection connection) : base(connection, "TAExchangeTradeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<account> accounts
        {
            get
            {
                if ((_accounts == null))
                {
                    _accounts = base.CreateObjectSet<account>("accounts");
                }
                return _accounts;
            }
        }
        private ObjectSet<account> _accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<accountHistory> accountHistories
        {
            get
            {
                if ((_accountHistories == null))
                {
                    _accountHistories = base.CreateObjectSet<accountHistory>("accountHistories");
                }
                return _accountHistories;
            }
        }
        private ObjectSet<accountHistory> _accountHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<expiryType> expiryTypes
        {
            get
            {
                if ((_expiryTypes == null))
                {
                    _expiryTypes = base.CreateObjectSet<expiryType>("expiryTypes");
                }
                return _expiryTypes;
            }
        }
        private ObjectSet<expiryType> _expiryTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<forex> forexes
        {
            get
            {
                if ((_forexes == null))
                {
                    _forexes = base.CreateObjectSet<forex>("forexes");
                }
                return _forexes;
            }
        }
        private ObjectSet<forex> _forexes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<market> markets
        {
            get
            {
                if ((_markets == null))
                {
                    _markets = base.CreateObjectSet<market>("markets");
                }
                return _markets;
            }
        }
        private ObjectSet<market> _markets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<orderType> orderTypes
        {
            get
            {
                if ((_orderTypes == null))
                {
                    _orderTypes = base.CreateObjectSet<orderType>("orderTypes");
                }
                return _orderTypes;
            }
        }
        private ObjectSet<orderType> _orderTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<portfolio> portfolios
        {
            get
            {
                if ((_portfolios == null))
                {
                    _portfolios = base.CreateObjectSet<portfolio>("portfolios");
                }
                return _portfolios;
            }
        }
        private ObjectSet<portfolio> _portfolios;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<portfolioHistory> portfolioHistories
        {
            get
            {
                if ((_portfolioHistories == null))
                {
                    _portfolioHistories = base.CreateObjectSet<portfolioHistory>("portfolioHistories");
                }
                return _portfolioHistories;
            }
        }
        private ObjectSet<portfolioHistory> _portfolioHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<stock> stocks
        {
            get
            {
                if ((_stocks == null))
                {
                    _stocks = base.CreateObjectSet<stock>("stocks");
                }
                return _stocks;
            }
        }
        private ObjectSet<stock> _stocks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<trade> trades
        {
            get
            {
                if ((_trades == null))
                {
                    _trades = base.CreateObjectSet<trade>("trades");
                }
                return _trades;
            }
        }
        private ObjectSet<trade> _trades;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tradeStatu> tradeStatus
        {
            get
            {
                if ((_tradeStatus == null))
                {
                    _tradeStatus = base.CreateObjectSet<tradeStatu>("tradeStatus");
                }
                return _tradeStatus;
            }
        }
        private ObjectSet<tradeStatu> _tradeStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tradeType> tradeTypes
        {
            get
            {
                if ((_tradeTypes == null))
                {
                    _tradeTypes = base.CreateObjectSet<tradeType>("tradeTypes");
                }
                return _tradeTypes;
            }
        }
        private ObjectSet<tradeType> _tradeTypes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaccounts(account account)
        {
            base.AddObject("accounts", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the accountHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaccountHistories(accountHistory accountHistory)
        {
            base.AddObject("accountHistories", accountHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the expiryTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToexpiryTypes(expiryType expiryType)
        {
            base.AddObject("expiryTypes", expiryType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the forexes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToforexes(forex forex)
        {
            base.AddObject("forexes", forex);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the markets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomarkets(market market)
        {
            base.AddObject("markets", market);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the orderTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToorderTypes(orderType orderType)
        {
            base.AddObject("orderTypes", orderType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the portfolios EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToportfolios(portfolio portfolio)
        {
            base.AddObject("portfolios", portfolio);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the portfolioHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToportfolioHistories(portfolioHistory portfolioHistory)
        {
            base.AddObject("portfolioHistories", portfolioHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the stocks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTostocks(stock stock)
        {
            base.AddObject("stocks", stock);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the trades EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotrades(trade trade)
        {
            base.AddObject("trades", trade);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tradeStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotradeStatus(tradeStatu tradeStatu)
        {
            base.AddObject("tradeStatus", tradeStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tradeTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotradeTypes(tradeType tradeType)
        {
            base.AddObject("tradeTypes", tradeType);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TAExchangeTradeModel", Name="account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new account object.
        /// </summary>
        /// <param name="userID">Initial value of the userID property.</param>
        /// <param name="currentBalance">Initial value of the currentBalance property.</param>
        /// <param name="pNL">Initial value of the pNL property.</param>
        public static account Createaccount(global::System.Guid userID, global::System.Decimal currentBalance, global::System.Decimal pNL)
        {
            account account = new account();
            account.userID = userID;
            account.currentBalance = currentBalance;
            account.pNL = pNL;
            return account;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid userID
        {
            get
            {
                return _userID;
            }
            set
            {
                if (_userID != value)
                {
                    OnuserIDChanging(value);
                    ReportPropertyChanging("userID");
                    _userID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userID");
                    OnuserIDChanged();
                }
            }
        }
        private global::System.Guid _userID;
        partial void OnuserIDChanging(global::System.Guid value);
        partial void OnuserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal currentBalance
        {
            get
            {
                return _currentBalance;
            }
            set
            {
                OncurrentBalanceChanging(value);
                ReportPropertyChanging("currentBalance");
                _currentBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("currentBalance");
                OncurrentBalanceChanged();
            }
        }
        private global::System.Decimal _currentBalance;
        partial void OncurrentBalanceChanging(global::System.Decimal value);
        partial void OncurrentBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal pNL
        {
            get
            {
                return _pNL;
            }
            set
            {
                OnpNLChanging(value);
                ReportPropertyChanging("pNL");
                _pNL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pNL");
                OnpNLChanged();
            }
        }
        private global::System.Decimal _pNL;
        partial void OnpNLChanging(global::System.Decimal value);
        partial void OnpNLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ranking
        {
            get
            {
                return _ranking;
            }
            set
            {
                OnrankingChanging(value);
                ReportPropertyChanging("ranking");
                _ranking = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ranking");
                OnrankingChanged();
            }
        }
        private Nullable<global::System.Int32> _ranking;
        partial void OnrankingChanging(Nullable<global::System.Int32> value);
        partial void OnrankingChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TAExchangeTradeModel", "FK_portfolio_account", "portfolio")]
        public EntityCollection<portfolio> portfolios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<portfolio>("TAExchangeTradeModel.FK_portfolio_account", "portfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<portfolio>("TAExchangeTradeModel.FK_portfolio_account", "portfolio", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TAExchangeTradeModel", "FK_trade_account", "trade")]
        public EntityCollection<trade> trades
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<trade>("TAExchangeTradeModel.FK_trade_account", "trade");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<trade>("TAExchangeTradeModel.FK_trade_account", "trade", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TAExchangeTradeModel", Name="accountHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class accountHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new accountHistory object.
        /// </summary>
        /// <param name="userID">Initial value of the userID property.</param>
        /// <param name="currentBalance">Initial value of the currentBalance property.</param>
        /// <param name="pNL">Initial value of the pNL property.</param>
        /// <param name="ranking">Initial value of the ranking property.</param>
        /// <param name="logDate">Initial value of the logDate property.</param>
        public static accountHistory CreateaccountHistory(global::System.Guid userID, global::System.Decimal currentBalance, global::System.Decimal pNL, global::System.Int32 ranking, global::System.DateTime logDate)
        {
            accountHistory accountHistory = new accountHistory();
            accountHistory.userID = userID;
            accountHistory.currentBalance = currentBalance;
            accountHistory.pNL = pNL;
            accountHistory.ranking = ranking;
            accountHistory.logDate = logDate;
            return accountHistory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid userID
        {
            get
            {
                return _userID;
            }
            set
            {
                if (_userID != value)
                {
                    OnuserIDChanging(value);
                    ReportPropertyChanging("userID");
                    _userID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userID");
                    OnuserIDChanged();
                }
            }
        }
        private global::System.Guid _userID;
        partial void OnuserIDChanging(global::System.Guid value);
        partial void OnuserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal currentBalance
        {
            get
            {
                return _currentBalance;
            }
            set
            {
                OncurrentBalanceChanging(value);
                ReportPropertyChanging("currentBalance");
                _currentBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("currentBalance");
                OncurrentBalanceChanged();
            }
        }
        private global::System.Decimal _currentBalance;
        partial void OncurrentBalanceChanging(global::System.Decimal value);
        partial void OncurrentBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal pNL
        {
            get
            {
                return _pNL;
            }
            set
            {
                OnpNLChanging(value);
                ReportPropertyChanging("pNL");
                _pNL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pNL");
                OnpNLChanged();
            }
        }
        private global::System.Decimal _pNL;
        partial void OnpNLChanging(global::System.Decimal value);
        partial void OnpNLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ranking
        {
            get
            {
                return _ranking;
            }
            set
            {
                OnrankingChanging(value);
                ReportPropertyChanging("ranking");
                _ranking = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ranking");
                OnrankingChanged();
            }
        }
        private global::System.Int32 _ranking;
        partial void OnrankingChanging(global::System.Int32 value);
        partial void OnrankingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime logDate
        {
            get
            {
                return _logDate;
            }
            set
            {
                if (_logDate != value)
                {
                    OnlogDateChanging(value);
                    ReportPropertyChanging("logDate");
                    _logDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("logDate");
                    OnlogDateChanged();
                }
            }
        }
        private global::System.DateTime _logDate;
        partial void OnlogDateChanging(global::System.DateTime value);
        partial void OnlogDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TAExchangeTradeModel", Name="expiryType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class expiryType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new expiryType object.
        /// </summary>
        /// <param name="expiryTypeID">Initial value of the expiryTypeID property.</param>
        /// <param name="expiryType1">Initial value of the expiryType1 property.</param>
        public static expiryType CreateexpiryType(global::System.Int32 expiryTypeID, global::System.String expiryType1)
        {
            expiryType expiryType = new expiryType();
            expiryType.expiryTypeID = expiryTypeID;
            expiryType.expiryType1 = expiryType1;
            return expiryType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 expiryTypeID
        {
            get
            {
                return _expiryTypeID;
            }
            set
            {
                if (_expiryTypeID != value)
                {
                    OnexpiryTypeIDChanging(value);
                    ReportPropertyChanging("expiryTypeID");
                    _expiryTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("expiryTypeID");
                    OnexpiryTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _expiryTypeID;
        partial void OnexpiryTypeIDChanging(global::System.Int32 value);
        partial void OnexpiryTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String expiryType1
        {
            get
            {
                return _expiryType1;
            }
            set
            {
                OnexpiryType1Changing(value);
                ReportPropertyChanging("expiryType1");
                _expiryType1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("expiryType1");
                OnexpiryType1Changed();
            }
        }
        private global::System.String _expiryType1;
        partial void OnexpiryType1Changing(global::System.String value);
        partial void OnexpiryType1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TAExchangeTradeModel", "FK_trade_expiryType", "trade")]
        public EntityCollection<trade> trades
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<trade>("TAExchangeTradeModel.FK_trade_expiryType", "trade");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<trade>("TAExchangeTradeModel.FK_trade_expiryType", "trade", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TAExchangeTradeModel", Name="forex")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class forex : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new forex object.
        /// </summary>
        /// <param name="currency">Initial value of the currency property.</param>
        /// <param name="rate">Initial value of the rate property.</param>
        public static forex Createforex(global::System.String currency, global::System.Decimal rate)
        {
            forex forex = new forex();
            forex.currency = currency;
            forex.rate = rate;
            return forex;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String currency
        {
            get
            {
                return _currency;
            }
            set
            {
                if (_currency != value)
                {
                    OncurrencyChanging(value);
                    ReportPropertyChanging("currency");
                    _currency = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("currency");
                    OncurrencyChanged();
                }
            }
        }
        private global::System.String _currency;
        partial void OncurrencyChanging(global::System.String value);
        partial void OncurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal rate
        {
            get
            {
                return _rate;
            }
            set
            {
                OnrateChanging(value);
                ReportPropertyChanging("rate");
                _rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rate");
                OnrateChanged();
            }
        }
        private global::System.Decimal _rate;
        partial void OnrateChanging(global::System.Decimal value);
        partial void OnrateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TAExchangeTradeModel", "FK_stock_forex", "stock")]
        public EntityCollection<stock> stocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<stock>("TAExchangeTradeModel.FK_stock_forex", "stock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<stock>("TAExchangeTradeModel.FK_stock_forex", "stock", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TAExchangeTradeModel", Name="market")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class market : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new market object.
        /// </summary>
        /// <param name="tickerSymbol">Initial value of the tickerSymbol property.</param>
        public static market Createmarket(global::System.String tickerSymbol)
        {
            market market = new market();
            market.tickerSymbol = tickerSymbol;
            return market;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String tickerSymbol
        {
            get
            {
                return _tickerSymbol;
            }
            set
            {
                if (_tickerSymbol != value)
                {
                    OntickerSymbolChanging(value);
                    ReportPropertyChanging("tickerSymbol");
                    _tickerSymbol = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("tickerSymbol");
                    OntickerSymbolChanged();
                }
            }
        }
        private global::System.String _tickerSymbol;
        partial void OntickerSymbolChanging(global::System.String value);
        partial void OntickerSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ask
        {
            get
            {
                return _ask;
            }
            set
            {
                OnaskChanging(value);
                ReportPropertyChanging("ask");
                _ask = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ask");
                OnaskChanged();
            }
        }
        private global::System.String _ask;
        partial void OnaskChanging(global::System.String value);
        partial void OnaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String averageDailyVolume
        {
            get
            {
                return _averageDailyVolume;
            }
            set
            {
                OnaverageDailyVolumeChanging(value);
                ReportPropertyChanging("averageDailyVolume");
                _averageDailyVolume = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("averageDailyVolume");
                OnaverageDailyVolumeChanged();
            }
        }
        private global::System.String _averageDailyVolume;
        partial void OnaverageDailyVolumeChanging(global::System.String value);
        partial void OnaverageDailyVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String bid
        {
            get
            {
                return _bid;
            }
            set
            {
                OnbidChanging(value);
                ReportPropertyChanging("bid");
                _bid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("bid");
                OnbidChanged();
            }
        }
        private global::System.String _bid;
        partial void OnbidChanging(global::System.String value);
        partial void OnbidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String change
        {
            get
            {
                return _change;
            }
            set
            {
                OnchangeChanging(value);
                ReportPropertyChanging("change");
                _change = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("change");
                OnchangeChanged();
            }
        }
        private global::System.String _change;
        partial void OnchangeChanging(global::System.String value);
        partial void OnchangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String earningsShare
        {
            get
            {
                return _earningsShare;
            }
            set
            {
                OnearningsShareChanging(value);
                ReportPropertyChanging("earningsShare");
                _earningsShare = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("earningsShare");
                OnearningsShareChanged();
            }
        }
        private global::System.String _earningsShare;
        partial void OnearningsShareChanging(global::System.String value);
        partial void OnearningsShareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String marketCapitalization
        {
            get
            {
                return _marketCapitalization;
            }
            set
            {
                OnmarketCapitalizationChanging(value);
                ReportPropertyChanging("marketCapitalization");
                _marketCapitalization = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("marketCapitalization");
                OnmarketCapitalizationChanged();
            }
        }
        private global::System.String _marketCapitalization;
        partial void OnmarketCapitalizationChanging(global::System.String value);
        partial void OnmarketCapitalizationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String open
        {
            get
            {
                return _open;
            }
            set
            {
                OnopenChanging(value);
                ReportPropertyChanging("open");
                _open = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("open");
                OnopenChanged();
            }
        }
        private global::System.String _open;
        partial void OnopenChanging(global::System.String value);
        partial void OnopenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String previousClose
        {
            get
            {
                return _previousClose;
            }
            set
            {
                OnpreviousCloseChanging(value);
                ReportPropertyChanging("previousClose");
                _previousClose = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("previousClose");
                OnpreviousCloseChanged();
            }
        }
        private global::System.String _previousClose;
        partial void OnpreviousCloseChanging(global::System.String value);
        partial void OnpreviousCloseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String changeinPercent
        {
            get
            {
                return _changeinPercent;
            }
            set
            {
                OnchangeinPercentChanging(value);
                ReportPropertyChanging("changeinPercent");
                _changeinPercent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("changeinPercent");
                OnchangeinPercentChanged();
            }
        }
        private global::System.String _changeinPercent;
        partial void OnchangeinPercentChanging(global::System.String value);
        partial void OnchangeinPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String priceSales
        {
            get
            {
                return _priceSales;
            }
            set
            {
                OnpriceSalesChanging(value);
                ReportPropertyChanging("priceSales");
                _priceSales = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("priceSales");
                OnpriceSalesChanged();
            }
        }
        private global::System.String _priceSales;
        partial void OnpriceSalesChanging(global::System.String value);
        partial void OnpriceSalesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String priceBook
        {
            get
            {
                return _priceBook;
            }
            set
            {
                OnpriceBookChanging(value);
                ReportPropertyChanging("priceBook");
                _priceBook = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("priceBook");
                OnpriceBookChanged();
            }
        }
        private global::System.String _priceBook;
        partial void OnpriceBookChanging(global::System.String value);
        partial void OnpriceBookChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pERatio
        {
            get
            {
                return _pERatio;
            }
            set
            {
                OnpERatioChanging(value);
                ReportPropertyChanging("pERatio");
                _pERatio = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("pERatio");
                OnpERatioChanged();
            }
        }
        private global::System.String _pERatio;
        partial void OnpERatioChanging(global::System.String value);
        partial void OnpERatioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String pEGRatio
        {
            get
            {
                return _pEGRatio;
            }
            set
            {
                OnpEGRatioChanging(value);
                ReportPropertyChanging("pEGRatio");
                _pEGRatio = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("pEGRatio");
                OnpEGRatioChanged();
            }
        }
        private global::System.String _pEGRatio;
        partial void OnpEGRatioChanging(global::System.String value);
        partial void OnpEGRatioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String oneyrTargetPrice
        {
            get
            {
                return _oneyrTargetPrice;
            }
            set
            {
                OnoneyrTargetPriceChanging(value);
                ReportPropertyChanging("oneyrTargetPrice");
                _oneyrTargetPrice = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("oneyrTargetPrice");
                OnoneyrTargetPriceChanged();
            }
        }
        private global::System.String _oneyrTargetPrice;
        partial void OnoneyrTargetPriceChanging(global::System.String value);
        partial void OnoneyrTargetPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String volume
        {
            get
            {
                return _volume;
            }
            set
            {
                OnvolumeChanging(value);
                ReportPropertyChanging("volume");
                _volume = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("volume");
                OnvolumeChanged();
            }
        }
        private global::System.String _volume;
        partial void OnvolumeChanging(global::System.String value);
        partial void OnvolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String dividendYield
        {
            get
            {
                return _dividendYield;
            }
            set
            {
                OndividendYieldChanging(value);
                ReportPropertyChanging("dividendYield");
                _dividendYield = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("dividendYield");
                OndividendYieldChanged();
            }
        }
        private global::System.String _dividendYield;
        partial void OndividendYieldChanging(global::System.String value);
        partial void OndividendYieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> lastUpdate
        {
            get
            {
                return _lastUpdate;
            }
            set
            {
                OnlastUpdateChanging(value);
                ReportPropertyChanging("lastUpdate");
                _lastUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lastUpdate");
                OnlastUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _lastUpdate;
        partial void OnlastUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnlastUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String daysRange
        {
            get
            {
                return _daysRange;
            }
            set
            {
                OndaysRangeChanging(value);
                ReportPropertyChanging("daysRange");
                _daysRange = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("daysRange");
                OndaysRangeChanged();
            }
        }
        private global::System.String _daysRange;
        partial void OndaysRangeChanging(global::System.String value);
        partial void OndaysRangeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TAExchangeTradeModel", "FK_market_stock", "stock")]
        public stock stock
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<stock>("TAExchangeTradeModel.FK_market_stock", "stock").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<stock>("TAExchangeTradeModel.FK_market_stock", "stock").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<stock> stockReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<stock>("TAExchangeTradeModel.FK_market_stock", "stock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<stock>("TAExchangeTradeModel.FK_market_stock", "stock", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TAExchangeTradeModel", Name="orderType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class orderType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new orderType object.
        /// </summary>
        /// <param name="orderTypeID">Initial value of the orderTypeID property.</param>
        /// <param name="orderType1">Initial value of the orderType1 property.</param>
        public static orderType CreateorderType(global::System.Int32 orderTypeID, global::System.String orderType1)
        {
            orderType orderType = new orderType();
            orderType.orderTypeID = orderTypeID;
            orderType.orderType1 = orderType1;
            return orderType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 orderTypeID
        {
            get
            {
                return _orderTypeID;
            }
            set
            {
                if (_orderTypeID != value)
                {
                    OnorderTypeIDChanging(value);
                    ReportPropertyChanging("orderTypeID");
                    _orderTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("orderTypeID");
                    OnorderTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _orderTypeID;
        partial void OnorderTypeIDChanging(global::System.Int32 value);
        partial void OnorderTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String orderType1
        {
            get
            {
                return _orderType1;
            }
            set
            {
                OnorderType1Changing(value);
                ReportPropertyChanging("orderType1");
                _orderType1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("orderType1");
                OnorderType1Changed();
            }
        }
        private global::System.String _orderType1;
        partial void OnorderType1Changing(global::System.String value);
        partial void OnorderType1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TAExchangeTradeModel", "FK_trade_orderType", "trade")]
        public EntityCollection<trade> trades
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<trade>("TAExchangeTradeModel.FK_trade_orderType", "trade");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<trade>("TAExchangeTradeModel.FK_trade_orderType", "trade", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TAExchangeTradeModel", Name="portfolio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class portfolio : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new portfolio object.
        /// </summary>
        /// <param name="userID">Initial value of the userID property.</param>
        /// <param name="tickerSymbol">Initial value of the tickerSymbol property.</param>
        /// <param name="quantity">Initial value of the quantity property.</param>
        /// <param name="averagePrice">Initial value of the averagePrice property.</param>
        /// <param name="pNL">Initial value of the pNL property.</param>
        public static portfolio Createportfolio(global::System.Guid userID, global::System.String tickerSymbol, global::System.Decimal quantity, global::System.Decimal averagePrice, global::System.Decimal pNL)
        {
            portfolio portfolio = new portfolio();
            portfolio.userID = userID;
            portfolio.tickerSymbol = tickerSymbol;
            portfolio.quantity = quantity;
            portfolio.averagePrice = averagePrice;
            portfolio.pNL = pNL;
            return portfolio;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid userID
        {
            get
            {
                return _userID;
            }
            set
            {
                if (_userID != value)
                {
                    OnuserIDChanging(value);
                    ReportPropertyChanging("userID");
                    _userID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userID");
                    OnuserIDChanged();
                }
            }
        }
        private global::System.Guid _userID;
        partial void OnuserIDChanging(global::System.Guid value);
        partial void OnuserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String tickerSymbol
        {
            get
            {
                return _tickerSymbol;
            }
            set
            {
                if (_tickerSymbol != value)
                {
                    OntickerSymbolChanging(value);
                    ReportPropertyChanging("tickerSymbol");
                    _tickerSymbol = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("tickerSymbol");
                    OntickerSymbolChanged();
                }
            }
        }
        private global::System.String _tickerSymbol;
        partial void OntickerSymbolChanging(global::System.String value);
        partial void OntickerSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal quantity
        {
            get
            {
                return _quantity;
            }
            set
            {
                OnquantityChanging(value);
                ReportPropertyChanging("quantity");
                _quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quantity");
                OnquantityChanged();
            }
        }
        private global::System.Decimal _quantity;
        partial void OnquantityChanging(global::System.Decimal value);
        partial void OnquantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal averagePrice
        {
            get
            {
                return _averagePrice;
            }
            set
            {
                OnaveragePriceChanging(value);
                ReportPropertyChanging("averagePrice");
                _averagePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("averagePrice");
                OnaveragePriceChanged();
            }
        }
        private global::System.Decimal _averagePrice;
        partial void OnaveragePriceChanging(global::System.Decimal value);
        partial void OnaveragePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal pNL
        {
            get
            {
                return _pNL;
            }
            set
            {
                OnpNLChanging(value);
                ReportPropertyChanging("pNL");
                _pNL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pNL");
                OnpNLChanged();
            }
        }
        private global::System.Decimal _pNL;
        partial void OnpNLChanging(global::System.Decimal value);
        partial void OnpNLChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TAExchangeTradeModel", "FK_portfolio_account", "account")]
        public account account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("TAExchangeTradeModel.FK_portfolio_account", "account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("TAExchangeTradeModel.FK_portfolio_account", "account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<account> accountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("TAExchangeTradeModel.FK_portfolio_account", "account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<account>("TAExchangeTradeModel.FK_portfolio_account", "account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TAExchangeTradeModel", "FK_portfolio_stock", "stock")]
        public stock stock
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<stock>("TAExchangeTradeModel.FK_portfolio_stock", "stock").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<stock>("TAExchangeTradeModel.FK_portfolio_stock", "stock").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<stock> stockReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<stock>("TAExchangeTradeModel.FK_portfolio_stock", "stock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<stock>("TAExchangeTradeModel.FK_portfolio_stock", "stock", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TAExchangeTradeModel", Name="portfolioHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class portfolioHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new portfolioHistory object.
        /// </summary>
        /// <param name="userID">Initial value of the userID property.</param>
        /// <param name="tickerSymbol">Initial value of the tickerSymbol property.</param>
        /// <param name="quantity">Initial value of the quantity property.</param>
        /// <param name="averagePrice">Initial value of the averagePrice property.</param>
        /// <param name="pNL">Initial value of the pNL property.</param>
        /// <param name="logDate">Initial value of the logDate property.</param>
        public static portfolioHistory CreateportfolioHistory(global::System.Guid userID, global::System.String tickerSymbol, global::System.Decimal quantity, global::System.Decimal averagePrice, global::System.Decimal pNL, global::System.DateTime logDate)
        {
            portfolioHistory portfolioHistory = new portfolioHistory();
            portfolioHistory.userID = userID;
            portfolioHistory.tickerSymbol = tickerSymbol;
            portfolioHistory.quantity = quantity;
            portfolioHistory.averagePrice = averagePrice;
            portfolioHistory.pNL = pNL;
            portfolioHistory.logDate = logDate;
            return portfolioHistory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid userID
        {
            get
            {
                return _userID;
            }
            set
            {
                if (_userID != value)
                {
                    OnuserIDChanging(value);
                    ReportPropertyChanging("userID");
                    _userID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userID");
                    OnuserIDChanged();
                }
            }
        }
        private global::System.Guid _userID;
        partial void OnuserIDChanging(global::System.Guid value);
        partial void OnuserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String tickerSymbol
        {
            get
            {
                return _tickerSymbol;
            }
            set
            {
                if (_tickerSymbol != value)
                {
                    OntickerSymbolChanging(value);
                    ReportPropertyChanging("tickerSymbol");
                    _tickerSymbol = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("tickerSymbol");
                    OntickerSymbolChanged();
                }
            }
        }
        private global::System.String _tickerSymbol;
        partial void OntickerSymbolChanging(global::System.String value);
        partial void OntickerSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal quantity
        {
            get
            {
                return _quantity;
            }
            set
            {
                OnquantityChanging(value);
                ReportPropertyChanging("quantity");
                _quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quantity");
                OnquantityChanged();
            }
        }
        private global::System.Decimal _quantity;
        partial void OnquantityChanging(global::System.Decimal value);
        partial void OnquantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal averagePrice
        {
            get
            {
                return _averagePrice;
            }
            set
            {
                OnaveragePriceChanging(value);
                ReportPropertyChanging("averagePrice");
                _averagePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("averagePrice");
                OnaveragePriceChanged();
            }
        }
        private global::System.Decimal _averagePrice;
        partial void OnaveragePriceChanging(global::System.Decimal value);
        partial void OnaveragePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal pNL
        {
            get
            {
                return _pNL;
            }
            set
            {
                OnpNLChanging(value);
                ReportPropertyChanging("pNL");
                _pNL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pNL");
                OnpNLChanged();
            }
        }
        private global::System.Decimal _pNL;
        partial void OnpNLChanging(global::System.Decimal value);
        partial void OnpNLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime logDate
        {
            get
            {
                return _logDate;
            }
            set
            {
                if (_logDate != value)
                {
                    OnlogDateChanging(value);
                    ReportPropertyChanging("logDate");
                    _logDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("logDate");
                    OnlogDateChanged();
                }
            }
        }
        private global::System.DateTime _logDate;
        partial void OnlogDateChanging(global::System.DateTime value);
        partial void OnlogDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TAExchangeTradeModel", Name="stock")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class stock : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new stock object.
        /// </summary>
        /// <param name="tickerSymbol">Initial value of the tickerSymbol property.</param>
        /// <param name="stockName">Initial value of the stockName property.</param>
        /// <param name="lastDone">Initial value of the lastDone property.</param>
        /// <param name="currency">Initial value of the currency property.</param>
        public static stock Createstock(global::System.String tickerSymbol, global::System.String stockName, global::System.Decimal lastDone, global::System.String currency)
        {
            stock stock = new stock();
            stock.tickerSymbol = tickerSymbol;
            stock.stockName = stockName;
            stock.lastDone = lastDone;
            stock.currency = currency;
            return stock;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String tickerSymbol
        {
            get
            {
                return _tickerSymbol;
            }
            set
            {
                if (_tickerSymbol != value)
                {
                    OntickerSymbolChanging(value);
                    ReportPropertyChanging("tickerSymbol");
                    _tickerSymbol = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("tickerSymbol");
                    OntickerSymbolChanged();
                }
            }
        }
        private global::System.String _tickerSymbol;
        partial void OntickerSymbolChanging(global::System.String value);
        partial void OntickerSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String stockName
        {
            get
            {
                return _stockName;
            }
            set
            {
                OnstockNameChanging(value);
                ReportPropertyChanging("stockName");
                _stockName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("stockName");
                OnstockNameChanged();
            }
        }
        private global::System.String _stockName;
        partial void OnstockNameChanging(global::System.String value);
        partial void OnstockNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal lastDone
        {
            get
            {
                return _lastDone;
            }
            set
            {
                OnlastDoneChanging(value);
                ReportPropertyChanging("lastDone");
                _lastDone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lastDone");
                OnlastDoneChanged();
            }
        }
        private global::System.Decimal _lastDone;
        partial void OnlastDoneChanging(global::System.Decimal value);
        partial void OnlastDoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String currency
        {
            get
            {
                return _currency;
            }
            set
            {
                OncurrencyChanging(value);
                ReportPropertyChanging("currency");
                _currency = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("currency");
                OncurrencyChanged();
            }
        }
        private global::System.String _currency;
        partial void OncurrencyChanging(global::System.String value);
        partial void OncurrencyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TAExchangeTradeModel", "FK_stock_forex", "forex")]
        public forex forex
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<forex>("TAExchangeTradeModel.FK_stock_forex", "forex").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<forex>("TAExchangeTradeModel.FK_stock_forex", "forex").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<forex> forexReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<forex>("TAExchangeTradeModel.FK_stock_forex", "forex");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<forex>("TAExchangeTradeModel.FK_stock_forex", "forex", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TAExchangeTradeModel", "FK_market_stock", "market")]
        public market market
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<market>("TAExchangeTradeModel.FK_market_stock", "market").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<market>("TAExchangeTradeModel.FK_market_stock", "market").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<market> marketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<market>("TAExchangeTradeModel.FK_market_stock", "market");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<market>("TAExchangeTradeModel.FK_market_stock", "market", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TAExchangeTradeModel", "FK_portfolio_stock", "portfolio")]
        public EntityCollection<portfolio> portfolios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<portfolio>("TAExchangeTradeModel.FK_portfolio_stock", "portfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<portfolio>("TAExchangeTradeModel.FK_portfolio_stock", "portfolio", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TAExchangeTradeModel", "FK_trade_stock", "trade")]
        public EntityCollection<trade> trades
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<trade>("TAExchangeTradeModel.FK_trade_stock", "trade");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<trade>("TAExchangeTradeModel.FK_trade_stock", "trade", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TAExchangeTradeModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TAExchangeTradeModel", Name="trade")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class trade : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new trade object.
        /// </summary>
        /// <param name="transactionID">Initial value of the transactionID property.</param>
        /// <param name="userID">Initial value of the userID property.</param>
        /// <param name="tradeTypeID">Initial value of the tradeTypeID property.</param>
        /// <param name="orderTypeID">Initial value of the orderTypeID property.</param>
        /// <param name="tickerSymbol">Initial value of the tickerSymbol property.</param>
        /// <param name="quantity">Initial value of the quantity property.</param>
        /// <param name="tradePrice">Initial value of the tradePrice property.</param>
        /// <param name="tradeStatusID">Initial value of the tradeStatusID property.</param>
        public static trade Createtrade(global::System.Int32 transactionID, global::System.Guid userID, global::System.Int32 tradeTypeID, global::System.Int32 orderTypeID, global::System.String tickerSymbol, global::System.Decimal quantity, global::System.Decimal tradePrice, global::System.Int32 tradeStatusID)
        {
            trade trade = new trade();
            trade.transactionID = transactionID;
            trade.userID = userID;
            trade.tradeTypeID = tradeTypeID;
            trade.orderTypeID = orderTypeID;
            trade.tickerSymbol = tickerSymbol;
            trade.quantity = quantity;
            trade.tradePrice = tradePrice;
            trade.tradeStatusID = tradeStatusID;
            return trade;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 transactionID
        {
            get
            {
                return _transactionID;
            }
            set
            {
                if (_transactionID != value)
                {
                    OntransactionIDChanging(value);
                    ReportPropertyChanging("transactionID");
                    _transactionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("transactionID");
                    OntransactionIDChanged();
                }
            }
        }
        private global::System.Int32 _transactionID;
        partial void OntransactionIDChanging(global::System.Int32 value);
        partial void OntransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid userID
        {
            get
            {
                return _userID;
            }
            set
            {
                OnuserIDChanging(value);
                ReportPropertyChanging("userID");
                _userID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userID");
                OnuserIDChanged();
            }
        }
        private global::System.Guid _userID;
        partial void OnuserIDChanging(global::System.Guid value);
        partial void OnuserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 tradeTypeID
        {
            get
            {
                return _tradeTypeID;
            }
            set
            {
                OntradeTypeIDChanging(value);
                ReportPropertyChanging("tradeTypeID");
                _tradeTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("tradeTypeID");
                OntradeTypeIDChanged();
            }
        }
        private global::System.Int32 _tradeTypeID;
        partial void OntradeTypeIDChanging(global::System.Int32 value);
        partial void OntradeTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 orderTypeID
        {
            get
            {
                return _orderTypeID;
            }
            set
            {
                OnorderTypeIDChanging(value);
                ReportPropertyChanging("orderTypeID");
                _orderTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("orderTypeID");
                OnorderTypeIDChanged();
            }
        }
        private global::System.Int32 _orderTypeID;
        partial void OnorderTypeIDChanging(global::System.Int32 value);
        partial void OnorderTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String tickerSymbol
        {
            get
            {
                return _tickerSymbol;
            }
            set
            {
                OntickerSymbolChanging(value);
                ReportPropertyChanging("tickerSymbol");
                _tickerSymbol = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tickerSymbol");
                OntickerSymbolChanged();
            }
        }
        private global::System.String _tickerSymbol;
        partial void OntickerSymbolChanging(global::System.String value);
        partial void OntickerSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal quantity
        {
            get
            {
                return _quantity;
            }
            set
            {
                OnquantityChanging(value);
                ReportPropertyChanging("quantity");
                _quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quantity");
                OnquantityChanged();
            }
        }
        private global::System.Decimal _quantity;
        partial void OnquantityChanging(global::System.Decimal value);
        partial void OnquantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal tradePrice
        {
            get
            {
                return _tradePrice;
            }
            set
            {
                OntradePriceChanging(value);
                ReportPropertyChanging("tradePrice");
                _tradePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("tradePrice");
                OntradePriceChanged();
            }
        }
        private global::System.Decimal _tradePrice;
        partial void OntradePriceChanging(global::System.Decimal value);
        partial void OntradePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> tradeTime
        {
            get
            {
                return _tradeTime;
            }
            set
            {
                OntradeTimeChanging(value);
                ReportPropertyChanging("tradeTime");
                _tradeTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("tradeTime");
                OntradeTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _tradeTime;
        partial void OntradeTimeChanging(Nullable<global::System.DateTime> value);
        partial void OntradeTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 tradeStatusID
        {
            get
            {
                return _tradeStatusID;
            }
            set
            {
                OntradeStatusIDChanging(value);
                ReportPropertyChanging("tradeStatusID");
                _tradeStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("tradeStatusID");
                OntradeStatusIDChanged();
            }
        }
        private global::System.Int32 _tradeStatusID;
        partial void OntradeStatusIDChanging(global::System.Int32 value);
        partial void OntradeStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> expiryTypeID
        {
            get
            {
                return _expiryTypeID;
            }
            set
            {
                OnexpiryTypeIDChanging(value);
                ReportPropertyChanging("expiryTypeID");
                _expiryTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("expiryTypeID");
                OnexpiryTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _expiryTypeID;
        partial void OnexpiryTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnexpiryTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> expiryDate
        {
            get
            {
                return _expiryDate;
            }
            set
            {
                OnexpiryDateChanging(value);
                ReportPropertyChanging("expiryDate");
                _expiryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("expiryDate");
                OnexpiryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _expiryDate;
        partial void OnexpiryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnexpiryDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TAExchangeTradeModel", "FK_trade_account", "account")]
        public account account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("TAExchangeTradeModel.FK_trade_account", "account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("TAExchangeTradeModel.FK_trade_account", "account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<account> accountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("TAExchangeTradeModel.FK_trade_account", "account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<account>("TAExchangeTradeModel.FK_trade_account", "account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TAExchangeTradeModel", "FK_trade_expiryType", "expiryType")]
        public expiryType expiryType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<expiryType>("TAExchangeTradeModel.FK_trade_expiryType", "expiryType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<expiryType>("TAExchangeTradeModel.FK_trade_expiryType", "expiryType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<expiryType> expiryTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<expiryType>("TAExchangeTradeModel.FK_trade_expiryType", "expiryType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<expiryType>("TAExchangeTradeModel.FK_trade_expiryType", "expiryType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TAExchangeTradeModel", "FK_trade_orderType", "orderType")]
        public orderType orderType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<orderType>("TAExchangeTradeModel.FK_trade_orderType", "orderType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<orderType>("TAExchangeTradeModel.FK_trade_orderType", "orderType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<orderType> orderTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<orderType>("TAExchangeTradeModel.FK_trade_orderType", "orderType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<orderType>("TAExchangeTradeModel.FK_trade_orderType", "orderType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TAExchangeTradeModel", "FK_trade_stock", "stock")]
        public stock stock
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<stock>("TAExchangeTradeModel.FK_trade_stock", "stock").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<stock>("TAExchangeTradeModel.FK_trade_stock", "stock").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<stock> stockReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<stock>("TAExchangeTradeModel.FK_trade_stock", "stock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<stock>("TAExchangeTradeModel.FK_trade_stock", "stock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TAExchangeTradeModel", "FK_trade_tradeStatus", "tradeStatus")]
        public tradeStatu tradeStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tradeStatu>("TAExchangeTradeModel.FK_trade_tradeStatus", "tradeStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tradeStatu>("TAExchangeTradeModel.FK_trade_tradeStatus", "tradeStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tradeStatu> tradeStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tradeStatu>("TAExchangeTradeModel.FK_trade_tradeStatus", "tradeStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tradeStatu>("TAExchangeTradeModel.FK_trade_tradeStatus", "tradeStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TAExchangeTradeModel", "FK_trade_tradeType", "tradeType")]
        public tradeType tradeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tradeType>("TAExchangeTradeModel.FK_trade_tradeType", "tradeType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tradeType>("TAExchangeTradeModel.FK_trade_tradeType", "tradeType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tradeType> tradeTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tradeType>("TAExchangeTradeModel.FK_trade_tradeType", "tradeType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tradeType>("TAExchangeTradeModel.FK_trade_tradeType", "tradeType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TAExchangeTradeModel", Name="tradeStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tradeStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tradeStatu object.
        /// </summary>
        /// <param name="tradeStatusID">Initial value of the tradeStatusID property.</param>
        /// <param name="tradeStatus">Initial value of the tradeStatus property.</param>
        public static tradeStatu CreatetradeStatu(global::System.Int32 tradeStatusID, global::System.String tradeStatus)
        {
            tradeStatu tradeStatu = new tradeStatu();
            tradeStatu.tradeStatusID = tradeStatusID;
            tradeStatu.tradeStatus = tradeStatus;
            return tradeStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 tradeStatusID
        {
            get
            {
                return _tradeStatusID;
            }
            set
            {
                if (_tradeStatusID != value)
                {
                    OntradeStatusIDChanging(value);
                    ReportPropertyChanging("tradeStatusID");
                    _tradeStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("tradeStatusID");
                    OntradeStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _tradeStatusID;
        partial void OntradeStatusIDChanging(global::System.Int32 value);
        partial void OntradeStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String tradeStatus
        {
            get
            {
                return _tradeStatus;
            }
            set
            {
                OntradeStatusChanging(value);
                ReportPropertyChanging("tradeStatus");
                _tradeStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tradeStatus");
                OntradeStatusChanged();
            }
        }
        private global::System.String _tradeStatus;
        partial void OntradeStatusChanging(global::System.String value);
        partial void OntradeStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TAExchangeTradeModel", "FK_trade_tradeStatus", "trade")]
        public EntityCollection<trade> trades
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<trade>("TAExchangeTradeModel.FK_trade_tradeStatus", "trade");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<trade>("TAExchangeTradeModel.FK_trade_tradeStatus", "trade", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TAExchangeTradeModel", Name="tradeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tradeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tradeType object.
        /// </summary>
        /// <param name="tradeTypeID">Initial value of the tradeTypeID property.</param>
        /// <param name="tradeType1">Initial value of the tradeType1 property.</param>
        public static tradeType CreatetradeType(global::System.Int32 tradeTypeID, global::System.String tradeType1)
        {
            tradeType tradeType = new tradeType();
            tradeType.tradeTypeID = tradeTypeID;
            tradeType.tradeType1 = tradeType1;
            return tradeType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 tradeTypeID
        {
            get
            {
                return _tradeTypeID;
            }
            set
            {
                if (_tradeTypeID != value)
                {
                    OntradeTypeIDChanging(value);
                    ReportPropertyChanging("tradeTypeID");
                    _tradeTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("tradeTypeID");
                    OntradeTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _tradeTypeID;
        partial void OntradeTypeIDChanging(global::System.Int32 value);
        partial void OntradeTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String tradeType1
        {
            get
            {
                return _tradeType1;
            }
            set
            {
                OntradeType1Changing(value);
                ReportPropertyChanging("tradeType1");
                _tradeType1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tradeType1");
                OntradeType1Changed();
            }
        }
        private global::System.String _tradeType1;
        partial void OntradeType1Changing(global::System.String value);
        partial void OntradeType1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TAExchangeTradeModel", "FK_trade_tradeType", "trade")]
        public EntityCollection<trade> trades
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<trade>("TAExchangeTradeModel.FK_trade_tradeType", "trade");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<trade>("TAExchangeTradeModel.FK_trade_tradeType", "trade", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
